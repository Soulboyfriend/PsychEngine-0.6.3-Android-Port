name: Build Psych Engine (Android Fixed)

on: workflow_dispatch

jobs:
  Build:
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: Android-Arm64
            os: ubuntu-24.04
            buildArgs: "android -D officialBuild -ONLY_ARM64 -final"
            setupCommand: sh ./setup/unix.sh
            artifactName: androidBuild-Arm64
            artifactPath: "export/release/android/bin/app/build/outputs/apk/release/*.apk"
            system: Android
          - name: Android-Armv7
            os: ubuntu-24.04
            buildArgs: "android -D officialBuild -ONLY_ARMV7 -final"
            setupCommand: sh ./setup/unix.sh
            artifactName: androidBuild-Armv7
            artifactPath: "export/release/android/bin/app/build/outputs/apk/release/*.apk"
            system: Android
          - name: Android-Both
            os: ubuntu-24.04
            buildArgs: "android -D officialBuild -final"
            setupCommand: sh ./setup/unix.sh
            artifactName: androidBuild-Both
            artifactPath: "export/release/android/bin/app/build/outputs/apk/release/*.apk"
            system: Android

    runs-on: ${{ matrix.os }}
    steps:
      # üß± Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # üß∞ Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3 openjdk-17-jdk wget unzip

      # üß© Setup Haxe
      - name: Setup Haxe
        uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.3.3

      # üß± Setup Haxelib dependencies
      - name: Setup dependencies
        run: |
          ${{ matrix.setupCommand }}

          echo "üîπ Installing latest hxCodec from polybiusproxy"
          haxelib remove hxCodec --always || true
          haxelib git hxCodec https://github.com/polybiusproxy/hxCodec.git
          haxelib list

      # üß© Fix Lime SDK paths
      - name: Patch Lime SDK paths
        run: |
          echo "üîß Setting Android SDK and NDK paths manually"
          export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
          export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk/25.2.9519653
          mkdir -p ~/.lime/config
          echo "<config>
            <android>
              <sdk>$ANDROID_SDK_ROOT</sdk>
              <ndk>$ANDROID_NDK_ROOT</ndk>
              <toolsVersion>34.0.0</toolsVersion>
              <targetSDK>34</targetSDK>
              <buildToolsVersion>34.0.0</buildToolsVersion>
            </android>
          </config>" > ~/.lime/config.xml
          cat ~/.lime/config.xml
          echo "‚úÖ SDK and NDK configured for Lime"

      # üß© Force run Lime setup Android before build
      - name: Run Lime Setup Android
        run: |
          echo "üß± Running Lime setup for Android (forced)"
          export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
          export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk/25.2.9519653
          yes | haxelib run lime setup android --quiet || true
          haxelib run lime config ANDROID_SDK $ANDROID_SDK_ROOT
          haxelib run lime config ANDROID_NDK $ANDROID_NDK_ROOT
          echo "‚úÖ Lime Android setup complete"

      # üèóÔ∏è Build Psych Engine
      - name: Build Psych Engine for ${{ matrix.system }}
        run: |
          echo "üîπ Building for: ${{ matrix.name }}"
          export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
          export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk/25.2.9519653
          haxelib run lime build ${{ matrix.buildArgs }}

      # üì¶ Upload artifact
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifactName }}
          path: ${{ matrix.artifactPath }}
